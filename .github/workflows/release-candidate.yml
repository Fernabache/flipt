# TODO: remove this file once we have a stable release, as the main `release.yml` should be able
# to handle RC releases as well.
name: Release Candidate
on:
  workflow_dispatch:
    inputs:
      tag:
        description: Flipt release candidate version tag to generate
        required: true

permissions:
  contents: write
  packages: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - run: |
          if [[ "${{ github.event.inputs.tag }}" != *"-rc"* ]]; then
            echo "Tag must end in rc"
            exit 1
          fi

      - name: Generate token
        id: generate_token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.FLIPT_RELEASE_BOT_APP_ID }}
          private_key: ${{ secrets.FLIPT_RELEASE_BOT_APP_PEM }}
          installation_id: ${{ secrets.FLIPT_RELEASE_BOT_INSTALLATION_ID }}

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - run: git tag ${{ github.event.inputs.tag }}

      - uses: actions/setup-go@v3
        with:
          go-version: "1.18"
          check-latest: true
          cache: true

      - uses: arduino/setup-task@v1
        with:
          repo-token: ${{ steps.generate_token.outputs.token }}

      - uses: docker/setup-qemu-action@v2

      - uses: docker/setup-buildx-action@v2

      - name: Install GCC for arm64
        run: |
          sudo apt-get update &&
          sudo apt-get install -y gcc-aarch64-linux-gnu

      - name: Install Syft
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin

      - name: Prepare for release
        run: |
          task prep

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: "${{ github.repository_owner }}"
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: GoReleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          distribution: goreleaser-pro
          version: latest
          args: release --rm-dist
        env:
          GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ANALYTICS_KEY: ${{ secrets.ANALYTICS_KEY }}
          DISCORD_WEBHOOK_ID: ${{ secrets.DISCORD_WEBHOOK_ID }}
          DISCORD_WEBHOOK_TOKEN: ${{ secrets.DISCORD_WEBHOOK_TOKEN }}
