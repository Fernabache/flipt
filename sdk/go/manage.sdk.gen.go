// Code generated by protoc-gen-go-flipt-sdk. DO NOT EDIT.

package sdk

import (
	context "context"
	manage "go.flipt.io/flipt/rpc/flipt/manage"
)

type Manage struct {
	transport              manage.ManageServiceClient
	authenticationProvider ClientAuthenticationProvider
}

func (x *Manage) GetNamespace(ctx context.Context, v *manage.GetNamespaceRequest) (*manage.Namespace, error) {
	ctx, err := authenticate(ctx, x.authenticationProvider)
	if err != nil {
		return nil, err
	}
	return x.transport.GetNamespace(ctx, v)
}

func (x *Manage) PutFlag(ctx context.Context, v *manage.PutFlagRequest) (*manage.PutFlagResponse, error) {
	ctx, err := authenticate(ctx, x.authenticationProvider)
	if err != nil {
		return nil, err
	}
	return x.transport.PutFlag(ctx, v)
}

func (x *Manage) PutSegment(ctx context.Context, v *manage.PutSegmentRequest) (*manage.PutSegmentResponse, error) {
	ctx, err := authenticate(ctx, x.authenticationProvider)
	if err != nil {
		return nil, err
	}
	return x.transport.PutSegment(ctx, v)
}
