syntax = "proto3";

package flipt.auth;

import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";

option go_package = "go.flipt.io/flipt/rpc/flipt/auth";

enum Method {
  METHOD_NONE = 0;
  METHOD_TOKEN = 1;
  METHOD_OIDC = 2;
  METHOD_KUBERNETES = 3;
  METHOD_GITHUB = 4;
  METHOD_JWT = 5;
}

message MethodInfo {
  Method method = 1;
  bool enabled = 2;
  bool session_compatible = 3;
  google.protobuf.Struct metadata = 4;
}

message ListAuthenticationMethodsResponse {
  repeated MethodInfo methods = 1;
}

service PublicAuthenticationService {
  rpc ListAuthenticationMethods(google.protobuf.Empty) returns (ListAuthenticationMethodsResponse) {}
}

message Authentication {
  string id = 1;
  Method method = 2;
  google.protobuf.Timestamp expires_at = 3;
  google.protobuf.Timestamp created_at = 4;
  google.protobuf.Timestamp updated_at = 5;
  map<string, string> metadata = 6;
}

message GetAuthenticationRequest {
  string id = 1;
}

message ListAuthenticationsRequest {
  Method method = 1;
  int32 limit = 2;
  string page_token = 3;
}

message ListAuthenticationsResponse {
  repeated Authentication authentications = 1;
  string next_page_token = 2;
}

message DeleteAuthenticationRequest {
  string id = 1;
}

message ExpireAuthenticationSelfRequest {
  optional google.protobuf.Timestamp expires_at = 1;
}

service AuthenticationService {
  rpc GetAuthenticationSelf(google.protobuf.Empty) returns (Authentication) {}
  rpc GetAuthentication(GetAuthenticationRequest) returns (Authentication) {}
  rpc ListAuthentications(ListAuthenticationsRequest) returns (ListAuthenticationsResponse) {}
  rpc DeleteAuthentication(DeleteAuthenticationRequest) returns (google.protobuf.Empty) {}
  rpc ExpireAuthenticationSelf(ExpireAuthenticationSelfRequest) returns (google.protobuf.Empty) {}
}

message CreateTokenRequest {
  string name = 1;
  string description = 2;
  google.protobuf.Timestamp expires_at = 3;
  string namespace_key = 4;
}

message CreateTokenResponse {
  string client_token = 1;
  Authentication authentication = 2;
}

service AuthenticationMethodTokenService {
  rpc CreateToken(CreateTokenRequest) returns (CreateTokenResponse) {}
}

message AuthorizeURLRequest {
  string provider = 1;
  string state = 2;
}

message AuthorizeURLResponse {
  string authorize_url = 1;
}

message CallbackRequest {
  string provider = 1;
  string code = 2;
  string state = 3;
}

message CallbackResponse {
  string client_token = 1;
  Authentication authentication = 2;
}

service AuthenticationMethodOIDCService {
  rpc AuthorizeURL(AuthorizeURLRequest) returns (AuthorizeURLResponse) {}
  rpc Callback(CallbackRequest) returns (CallbackResponse) {}
}

message VerifyServiceAccountRequest {
  string service_account_token = 1;
}

message VerifyServiceAccountResponse {
  string client_token = 1;
  Authentication authentication = 2;
}

service AuthenticationMethodKubernetesService {
  rpc VerifyServiceAccount(VerifyServiceAccountRequest) returns (VerifyServiceAccountResponse) {}
}

service AuthenticationMethodGithubService {
  rpc AuthorizeURL(AuthorizeURLRequest) returns (AuthorizeURLResponse) {}
  rpc Callback(CallbackRequest) returns (CallbackResponse) {}
}

enum AuthorizationPolicyAction {
  AUTHZ_ACTION_NONE = 0;
  AUTHZ_ACTION_READ = 1;
  AUTHZ_ACTION_WRITE = 2;
}

message AuthorizationRole {
  string id = 1;
  string key = 2;
  string name = 3;
  string description = 4;
}

message CreateRoleRequest {
  string key = 1;
  string name = 2;
  string description = 3;
}

message GetRoleRequest {
  string id = 1;
}

message UpdateRoleRequest {
  string id = 1;
  string key = 2;
  string name = 3;
  string description = 4;
}

message DeleteRoleRequest {
  string id = 1;
}

message ListRolesRequest {
  int32 limit = 1;
  string page_token = 2;
}

message ListRolesResponse {
  repeated AuthorizationRole roles = 1;
  string next_page_token = 2;
}

message AuthorizationPolicy {
  string id = 1;
  string namespace_key = 2;
  string role_key = 3;
  AuthorizationPolicyAction action = 4;
  google.protobuf.Timestamp created_at = 5;
  google.protobuf.Timestamp updated_at = 6;
}

message CreateAuthorizationPolicyRequest {
  string namespace_key = 1;
  string role_key = 2;
  AuthorizationPolicyAction action = 3;
}

message GetAuthorizationPolicyRequest {
  string id = 1;
  string namespace_key = 2;
}

message ListAuthorizationPoliciesRequest {
  string namespace_key = 1;
  string role_key = 2;
  int32 limit = 3;
  string page_token = 4;
}

message ListAuthorizationPoliciesResponse {
  repeated AuthorizationPolicy policies = 1;
  string next_page_token = 2;
}

message DeleteAuthorizationPolicyRequest {
  string id = 1;
  string namespace_key = 2;
}

// flipt:sdk:ignore
service AuthorizationService {
  rpc CreateRole(CreateRoleRequest) returns (AuthorizationRole) {}
  rpc GetRole(GetRoleRequest) returns (AuthorizationRole) {}
  rpc UpdateRole(UpdateRoleRequest) returns (AuthorizationRole) {}
  rpc DeleteRole(DeleteRoleRequest) returns (google.protobuf.Empty) {}
  rpc ListRoles(ListRolesRequest) returns (ListRolesResponse) {}

  rpc CreateNamespacePolicy(CreateAuthorizationPolicyRequest) returns (AuthorizationPolicy) {}
  rpc GetNamespacePolicy(GetAuthorizationPolicyRequest) returns (AuthorizationPolicy) {}
  rpc DeleteNamespacePolicy(DeleteAuthorizationPolicyRequest) returns (google.protobuf.Empty) {}
  rpc ListNamespacePolicies(ListAuthorizationPoliciesRequest) returns (ListAuthorizationPoliciesResponse) {}
}
